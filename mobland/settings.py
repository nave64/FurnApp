"""
Django settings for mobland project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-@cf86i@iun-ibc)o)7i%v@xnvq_1cn35d%-_(9_z1jltz@am71')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'True').lower() == 'true'

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'ckeditor',
    'django_recaptcha',
    'account_module',
    'home_module',
    'user_panel_module',
    'crispy_forms',
    'blogs',
    'contact_us',
    'product_module',
    'order_module',
    'site_module',
    'polls',
    'django_render_partial',
    'jalali_date',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Add WhiteNoise for static files
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mobland.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',  # Add this line
            ],
        },
    },
]


WSGI_APPLICATION = 'mobland.wsgi.application'

# Zarinpal Payment Gateway Configuration
ZARINPAL_MERCHANT_ID = os.getenv('ZARINPAL_MERCHANT_ID', 'test')  # Use environment variable
ZARINPAL_ACCESS_TOKEN = os.getenv('ZARINPAL_ACCESS_TOKEN', 'YOUR_ACCESS_TOKEN')  # OAuth 2.0 Access Token for GraphQL API
ZARINPAL_SANDBOX = os.getenv('ZARINPAL_SANDBOX', 'True').lower() == 'true'  # Set to False for production
ZARINPAL_CALLBACK_URL = os.getenv('ZARINPAL_CALLBACK_URL', 'http://localhost:8000/order/payment-verify/')  # Use environment variable
ZARINPAL_MOCK_MODE = os.getenv('ZARINPAL_MOCK_MODE', 'True').lower() == 'true'  # Enable mock mode for testing

# Site URL for email templates and absolute URLs
SITE_URL = os.getenv('SITE_URL', 'http://localhost:8000')

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'database', 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'fa-IR'

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",  # Or the correct path to your static folder
]

# Static files collection for production
STATIC_ROOT = BASE_DIR / 'staticfiles'

# WhiteNoise configuration for serving static files
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Media files (User uploads)
MEDIA_URL = '/uploads/'
# Use mounted disk in production, local directory in development
if os.getenv('LIARA_DISK_UPLOADS'):
    MEDIA_ROOT = '/uploads'  # Liara mounted disk
else:
    MEDIA_ROOT = BASE_DIR / 'uploads'  # Local development

AUTH_USER_MODEL = 'account_module.User'
LOGIN_URL = '/login'


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = str(os.getenv('EMAIL_USER'))
EMAIL_HOST_PASSWORD = str(os.getenv('EMAIL_PASSWORD'))
EMAIL_PORT = 587

RECAPTCHA_PUBLIC_KEY = os.getenv('RECAPTCHA_PUBLIC_KEY', '6Ld9GR4rAAAAAHdEGfJNKZnIRcpU_OWf2M7hdp28')
RECAPTCHA_PRIVATE_KEY = os.getenv('RECAPTCHA_PRIVATE_KEY', '6Ld9GR4rAAAAAPhCx9m0EPa6TQA-Or-XrjEAcA-O')
NOCAPTCHA = True

# Kavenegar SMS Service Configuration
KAVENEGAR_API_KEY = os.getenv('KAVENEGAR_API_KEY', '316A6A486777346739666B5868655269564E6C39644B396249566E705070374A6A7854686879394A746C493D')
KAVENEGAR_TEMPLATE_REGISTER = os.getenv('KAVENEGAR_TEMPLATE_REGISTER','Activation');  # Template for registration OTP
KAVENEGAR_TEMPLATE_RESET = os.getenv('KAVENEGAR_TEMPLATE_RESET','ResetPassword');  # Template for password reset OTP  # for checkbox style


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
